version: "3"
services:
  your-product-api:
    container_name: your-product-api
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      your-product-db:
        condition: service_healthy  # Ensures PostgreSQL passes health check
    networks:
      - your-product-network

  your-product-db:
    image: postgres
    container_name: your-product-db
    restart: always # Ensures the container restarts automatically if it crashes.
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck: # Defines a health check to ensure PostgreSQL is ready
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ] # Runs the pg_isready command to check if PostgreSQL is accepting connections.
      interval: 10s # Runs the test every 10 seconds.
      timeout: 5s # Each test times out after 5 seconds if no response is received.
      retries: 5 # The container is marked unhealthy after 5 failed attempts.
    networks:
      - your-product-network


volumes:
  postgres_data:


networks:
  your-product-network:
    driver: bridge